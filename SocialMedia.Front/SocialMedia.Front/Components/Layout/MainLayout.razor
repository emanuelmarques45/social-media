@using Microsoft.AspNetCore.Identity
@using SocialMedia.Classes.Interfaces
@using SocialMedia.Classes.Models
@using SocialMedia.Front.Components.Account

@inherits LayoutComponentBase
@inject IdentityUserAccessor UserAccessor
@inject AuthenticationStateProvider AuthStateProvider
@inject UserManager<UserModel> UserManager

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <NavMenu />

    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private UserModel User = default!;
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        // var claimsPrincipal = authState.User;

        // Check if the user is authenticated
        if (HttpContext.User.Identity?.IsAuthenticated ?? false)
        {
            // Use HttpContext to fetch the user
            User = await UserAccessor.GetRequiredUserAsync(HttpContext);
        }
    }
}